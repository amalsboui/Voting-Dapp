name: CD to AKS

on:
  workflow_run:
    workflows: ["Backend CI"]
    types:
      - completed

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    env:
      ACR_LOGIN_SERVER: your-acr-name.azurecr.io
      RESOURCE_GROUP: votingapp-rg
      AKS_CLUSTER: voting-dapp-aks

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure Login (OIDC)
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: ACR Login
        run: az acr login --name ${{ env.ACR_LOGIN_SERVER }}

      - name: Build and Push Backend Image
        run: |
          docker build -t $ACR_LOGIN_SERVER/backend:latest ./backend
          docker push $ACR_LOGIN_SERVER/backend:latest

      - name: Build and Push Frontend Image
        run: |
          docker build -t $ACR_LOGIN_SERVER/frontend:latest ./frontend
          docker push $ACR_LOGIN_SERVER/frontend:latest

      - name: Get AKS credentials
        run: az aks get-credentials --resource-group $RESOURCE_GROUP --name $AKS_CLUSTER --overwrite-existing

      - name: Apply Kubernetes manifests
        run: kubectl apply -f k8s/

      - name: Verify Deployment Rollout
        run: |
          kubectl rollout status deployment/flask-backend
          kubectl rollout status deployment/react-frontend
